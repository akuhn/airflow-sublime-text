<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>hql</string>
		<string>q</string>
		<string>ql</string>
	</array>
	<key>name</key>
	<string>Hive</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*(((?:CREATE(?:\s+TEMPORARY)?(?:\s+OR\s+REPLACE)?|DROP|ALTER|TRUNCATE)\s+(?:EXTERNAL\s+TABLE|TABLE|INDEX|VIEW|DATABASE|SCHEMA|FUNCTION|MACRO|ROLE)(?:\s+IF(?:\s+NOT)?\s+EXISTS)?)\s+(?:[a-z_][a-z0-9_\.]*))\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.definition.hive</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.parameter.hive</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*((UPDATE)\s+([^\=]+))\s+(SET)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.definition.hive</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.parameter.hive</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.parameter.hive</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*((ADD|LIST|DELETE)\s+(?:FILE|JAR|ARCHIVE))\s+(.*);</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.parameter.hive</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.value.hive</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:create|database|schema|if not exists|comment|location|with dbproperties|show|drop|if exists|restrict|cascade|external|table|select|distinct|partitioned (by|on)|clustered|sorted|asc|desc|into|buckets|skewed by|row format|stored as|stored by|with serdeproperties|(set)?\s*tblproperties|as|like|delimited|fields terminated by|collection items terminated by|map keys terminated by|lines terminated by|serde|sequencefile|textfile|rcfile|directories|inputformat|outputformat|from|where|group by|order by|limit|load data|local|inpath|overwrite|partition|insert|directory|all|cluster by|sort by|distribute by|having|using|reduce|transform|join|left|right|full|outer|semi|cross|lateral view|import|export|describe|archive|unarchive|alter|add|on|with cube|with rollup|truncate|DBPROPERTIES|tablesample|bucket|out of|case|when|then|end|view|jar|orc|escaped by|msck|repair|recover|partitions|replace columns|fileformat|touch|enable|disable|offline|no_drop|rename to|temporary\s+(function|macro)|index|idxproperties|WITH DEFERRED REBUILD|in table|databases|schemas|tables|extended|functions|columns|formatted|dot|set\s+(dbproperties|location|serde|(owner(\s+(user|role))?))|rebuild|union|percent|rows|else|over|by|unbounded|preceding|current row|following|window|explain|dependency|to|analyze|(compute|update)\s+statistics|locks|role|(set|create|grant|drop)\s+role|grant|revoke|user|group|change|serdeproperties|null defined as|lock|unlock|use|exclusive|delete|column|grouping sets|with|compact|first|after|file|grant|option|update|show_database|privileges|function|indexes|compile|named|roles|current|unset|uniquejoin|preserve|shared|concatenate|for|principals|avro|recordreader|transactions|parquet)\b</string>
			<key>name</key>
			<string>keyword.control.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(--).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.asciidoc</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.hive</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\{%</string>
			<key>end</key>
			<string>%\}</string>
			<key>name</key>
			<string>comment.block.airflow</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\{\{</string>
			<key>end</key>
			<string>\}\}</string>
			<key>name</key>
			<string>comment.block.airflow</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:tinyint|smallint|int|bigint|float|double|decimal|timestamp|date|boolean|string|varchar|char|binary)\b</string>
			<key>name</key>
			<string>storage.type.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:struct|map|array|uniontype)\b</string>
			<key>name</key>
			<string>support.type.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:null|true|false|INPUT__FILE__NAME|BLOCK__OFFSET__INSIDE__FILE)\b</string>
			<key>name</key>
			<string>constant.language.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\d+\b</string>
			<key>name</key>
			<string>constant.numeric.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>'\\\d+'</string>
			<key>name</key>
			<string>constant.numeric.hive</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.hive</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{\{</string>
					<key>end</key>
					<string>\}\}</string>
					<key>name</key>
					<string>comment.block.airflow</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.hive</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.hive</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{\{</string>
					<key>end</key>
					<string>\}\}</string>
					<key>name</key>
					<string>comment.block.airflow</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.hive</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\+|\-|\*|\/|\%|&amp;|\|\^|~)\b</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:=|&lt;=&gt;|==|&lt;&gt;|&lt;|&lt;=|&gt;|&gt;=|!=|(\b(between|is|like|rlike|regexp)\b))</string>
			<key>name</key>
			<string>keyword.operator.relational.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(and|&amp;&amp;|or|not|\|\||!|(not\s+)?in|(not\s+)?exists)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(map|struct|named_struct|array|create_union)\b</string>
			<key>name</key>
			<string>support.function.udf.complex.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:round|floor|ceil|ceiling|rand|exp|ln|log|log10|log2|pow|power|sqrt|bin|hex|unhex|conv|abs|pmod|sin|asin|cos|acos|tan|atan|degrees|radians|positive|negative|sign|e|pi)\b</string>
			<key>name</key>
			<string>support.function.udf.mathematic.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:size|map_keys|map_values|array_contains|sort_array)\b</string>
			<key>name</key>
			<string>support.function.udf.collection.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:binary|cast)\b</string>
			<key>name</key>
			<string>support.function.udf.type-cast.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:from_unixtime|unix_timestamp|to_date|year|month|day|dayofmonth|hour|minute|second|weekofyear|datediff|date_add|date_sub|from_utc_timestamp|to_utc_timestamp|current_date|current_timestamp|add_months|last_day|next_day|)\b</string>
			<key>name</key>
			<string>support.function.udf.date.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:if|coalesce|greatest|least)\b</string>
			<key>name</key>
			<string>support.function.udf.conditional.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:ascii|base64|concat|context_ngrams|concat_ws|decode|encode|find_in_set|format_number|get_json_object|in_file|instr|length|locate|lower|lcase|lpad|ltrim|ngrams|parse_url|printf|regexp_extract|regexp_replace|repeat|reverse|rpad|rtrim|sentences|space|split|str_to_map|substr|substring|translate|trim|unbase64|upper|ucase|initcap|levenshtein|soundex)\b</string>
			<key>name</key>
			<string>support.function.udf.string.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:java_method|reflect|hash|xpath|xpath_short|xpath_int|xpath_long|xpath_float|xpath_double|xpath_number|xpath_string|get_json_object|md5|sha1|sha|crc32|sha2)\b</string>
			<key>name</key>
			<string>support.function.udf.misc.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:count|sum|avg|min|max|variance|var_pop|var_samp|stddev_pop|stddev_samp|covar_pop|covar_samp|corr|percentile|percentile_approx|histogram_numeric|collect_set|collect_list|ntile|lead|lag|first_value|last_value|rank|row_number|dense_rank|cume_dist|percent_rank)\b</string>
			<key>name</key>
			<string>support.function.udaf.hive</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:inline|explode|json_tuple|parse_url_tuple|stack|posexplode)\b</string>
			<key>name</key>
			<string>support.function.udtf.hive</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*((?:set)\s+(?:[^\=]+))\s*=\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.parameter.hive</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.parameter.hive</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;?$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)(!|dfs)(.*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.definition.hive</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted.other.hive</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)(CRYPTO\s+(?:CREATE_KEY|CREATE_ZONE|DELETE_KEY))(.*)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.hive</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted.other.hive</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.hive</string>
	<key>uuid</key>
	<string>a4023757-1f16-4e02-b349-d1673b8626b8</string>
</dict>
</plist>
